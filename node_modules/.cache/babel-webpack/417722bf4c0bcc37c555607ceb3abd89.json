{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { debounceTime, map, startWith, tap } from \"rxjs/operators\";\nimport { merge } from 'rxjs';\nimport { ListItem } from \"../../model/list-item\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/core\";\n\nfunction ComboBoxSelectComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ComboBoxSelectComponent_mat_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const obj_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", obj_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", obj_r3.name, \" \");\n  }\n}\n\nexport class ComboBoxSelectComponent {\n  constructor(changeDetectorRef) {\n    this.changeDetectorRef = changeDetectorRef;\n    this.isReady = false;\n    this.list = [];\n    this.title = '';\n    this.required = false;\n    this.readonly = false;\n    this.event = new EventEmitter();\n    this.clickEvent = new EventEmitter();\n    this.typeEvent = new EventEmitter();\n\n    this.displayFunction = value => {\n      if (!value) {\n        return '';\n      }\n\n      let item;\n\n      if (value instanceof ListItem) {\n        item = this.list.find(i => i.value === value.value);\n      } else {\n        item = this.list.find(i => i.value === value.toString());\n      }\n\n      return item !== undefined ? item.name : '';\n    };\n  }\n\n  ngOnChanges(changes) {\n    const myControlChanges = changes['myControl'];\n    const listChanges = changes['list'];\n\n    if (this.list.length < 1 && !this.required) {\n      this.list.push({\n        value: '',\n        name: ''\n      });\n    }\n\n    if ((myControlChanges || listChanges) && this.myControl && this.list) {\n      this.init(this.list);\n    }\n\n    if (changes['required'] || changes['customError']) {\n      if (this.myControl) {\n        this.checkRequiredError(this.myControl.value);\n      }\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  init(list) {\n    this.filteredValues = merge(this.clickEvent.asObservable(), this.typeEvent.asObservable().pipe(debounceTime(100))).pipe(startWith(''), tap(value => this.checkRequiredError(value)), map(value => this.filter(value)));\n    this.isReady = true;\n  }\n\n  emitEventIfValid(value, list) {\n    if (list) {\n      const item = list.find(it => it.name === value);\n\n      if (item && this.myControl) {\n        this.myControl.setValue(item.value);\n        this.event.emit(item);\n      }\n    }\n  }\n\n  checkRequiredError(value) {\n    if (this.myControl && !this.myControl.value && value === '' && this.required) {\n      this.myControl.setErrors({\n        required: true\n      });\n    } else {\n      if (this.myControl && this.myControl.errors) {\n        delete this.myControl.errors['required'];\n      }\n\n      if (this.myControl && this.myControl.errors !== null && Object.keys(this.myControl.errors).length === 0) {\n        this.myControl.setErrors(null);\n      }\n    }\n  }\n\n  checkInvalidError(value, list) {\n    if (value) {\n      if (this.myControl && this.myControl.value && list) {\n        const listItem = list.find(it => {\n          if (this.myControl) {\n            return it.value === this.myControl.value;\n          }\n\n          return null;\n        });\n\n        if (listItem) {\n          value = listItem.name;\n        }\n      }\n    }\n\n    const filteredValues = list.filter(v => v.name.toLowerCase() === value.toLowerCase());\n    let item;\n\n    if (filteredValues) {\n      item = filteredValues.find(it => it.name === value);\n    }\n\n    if (value && (!item && filteredValues || item)) {\n      if (this.myControl && this.myControl.errors) {\n        delete this.myControl.errors['invalid'];\n      }\n    } else if (value && this.myControl) {\n      this.myControl.setErrors({\n        invalid: true\n      });\n    }\n  }\n\n  filter(value) {\n    const listItems = value !== '' ? this.list.filter(option => option.name.toLowerCase().includes(value.toLowerCase())) : this.list;\n    this.emitEventIfValid(value, listItems);\n    this.checkInvalidError(value, listItems);\n    return listItems;\n  }\n\n  onInput(event) {\n    // @ts-ignore\n    this.typeEvent.emit(event.target['value']);\n  }\n\n  onItemClick(obj) {\n    this.clickEvent.emit(obj.option.value);\n  }\n\n}\n\nComboBoxSelectComponent.ɵfac = function ComboBoxSelectComponent_Factory(t) {\n  return new (t || ComboBoxSelectComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nComboBoxSelectComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ComboBoxSelectComponent,\n  selectors: [[\"app-combobox-select\"]],\n  inputs: {\n    list: \"list\",\n    title: \"title\",\n    required: \"required\",\n    myControl: \"myControl\",\n    readonly: \"readonly\"\n  },\n  outputs: {\n    event: \"event\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 13,\n  vars: 9,\n  consts: [[\"appearance\", \"outline\", 1, \"mat-form-field-fluid\"], [\"type\", \"text\", \"maxlength\", \"255\", \"matInput\", \"\", 3, \"readonly\", \"formControl\", \"matAutocomplete\", \"input\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\"], [4, \"ngIf\"], [\"autoActiveFirstOption\", \"\", 3, \"displayWith\", \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function ComboBoxSelectComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n      i0.ɵɵelementStart(1, \"mat-label\");\n      i0.ɵɵelementStart(2, \"strong\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 1);\n      i0.ɵɵlistener(\"input\", function ComboBoxSelectComponent_Template_input_input_4_listener($event) {\n        return ctx.onInput($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 2);\n      i0.ɵɵelementStart(6, \"mat-icon\");\n      i0.ɵɵtext(7, \"keyboard_arrow_down\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, ComboBoxSelectComponent_mat_error_8_Template, 2, 0, \"mat-error\", 3);\n      i0.ɵɵelementStart(9, \"mat-autocomplete\", 4, 5);\n      i0.ɵɵlistener(\"optionSelected\", function ComboBoxSelectComponent_Template_mat_autocomplete_optionSelected_9_listener($event) {\n        return ctx.onItemClick($event);\n      });\n      i0.ɵɵtemplate(11, ComboBoxSelectComponent_mat_option_11_Template, 2, 2, \"mat-option\", 6);\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(10);\n\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"readonly\", ctx.readonly)(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r1);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.myControl.hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"displayWith\", ctx.displayFunction);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 7, ctx.filteredValues));\n    }\n  },\n  directives: [i1.MatFormField, i1.MatLabel, i2.MatInput, i3.DefaultValueAccessor, i4.MatAutocompleteTrigger, i3.MaxLengthValidator, i3.NgControlStatus, i3.FormControlDirective, i5.MatButton, i1.MatSuffix, i6.MatIcon, i7.NgIf, i4.MatAutocomplete, i7.NgForOf, i1.MatError, i8.MatOption],\n  pipes: [i7.AsyncPipe],\n  styles: [\"mat-form-field[_ngcontent-%COMP%] {\\n  width: 99%;\\n}\\n\\nmat-icon[_ngcontent-%COMP%] {\\n  margin-right: 0 !important;\\n  vertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbWJvLWJveC1zZWxlY3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSwwQkFBQTtFQUNBLHNCQUFBO0FBQ0YiLCJmaWxlIjoiY29tYm8tYm94LXNlbGVjdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDk5JTtcbn1cblxubWF0LWljb24ge1xuICBtYXJnaW4tcmlnaHQ6IDAgIWltcG9ydGFudDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbiJdfQ== */\"]\n});","map":{"version":3,"sources":["/home/adrian/Pulpit/frontendTask/frontendTask/src/app/shared/components/combo-box-select/combo-box-select.component.ts"],"names":["EventEmitter","debounceTime","map","startWith","tap","merge","ListItem","i0","i1","i2","i3","i4","i5","i6","i7","i8","ComboBoxSelectComponent_mat_error_8_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ComboBoxSelectComponent_mat_option_11_Template","obj_r3","$implicit","ɵɵproperty","name","ɵɵadvance","ɵɵtextInterpolate1","ComboBoxSelectComponent","constructor","changeDetectorRef","isReady","list","title","required","readonly","event","clickEvent","typeEvent","displayFunction","value","item","find","i","toString","undefined","ngOnChanges","changes","myControlChanges","listChanges","length","push","myControl","init","checkRequiredError","detectChanges","filteredValues","asObservable","pipe","filter","emitEventIfValid","it","setValue","emit","setErrors","errors","Object","keys","checkInvalidError","listItem","v","toLowerCase","invalid","listItems","option","includes","onInput","target","onItemClick","obj","ɵfac","ComboBoxSelectComponent_Factory","t","ɵɵdirectiveInject","ChangeDetectorRef","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","ComboBoxSelectComponent_Template","ɵɵlistener","ComboBoxSelectComponent_Template_input_input_4_listener","$event","ɵɵtemplate","ComboBoxSelectComponent_Template_mat_autocomplete_optionSelected_9_listener","ɵɵpipe","_r1","ɵɵreference","ɵɵtextInterpolate","hasError","ɵɵpipeBind1","directives","MatFormField","MatLabel","MatInput","DefaultValueAccessor","MatAutocompleteTrigger","MaxLengthValidator","NgControlStatus","FormControlDirective","MatButton","MatSuffix","MatIcon","NgIf","MatAutocomplete","NgForOf","MatError","MatOption","pipes","AsyncPipe","styles"],"mappings":"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","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { debounceTime, map, startWith, tap } from \"rxjs/operators\";\nimport { merge } from 'rxjs';\nimport { ListItem } from \"../../model/list-item\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/core\";\nfunction ComboBoxSelectComponent_mat_error_8_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Field is required\");\n    i0.ɵɵelementEnd();\n} }\nfunction ComboBoxSelectComponent_mat_option_11_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const obj_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", obj_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", obj_r3.name, \" \");\n} }\nexport class ComboBoxSelectComponent {\n    constructor(changeDetectorRef) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.isReady = false;\n        this.list = [];\n        this.title = '';\n        this.required = false;\n        this.readonly = false;\n        this.event = new EventEmitter();\n        this.clickEvent = new EventEmitter();\n        this.typeEvent = new EventEmitter();\n        this.displayFunction = (value) => {\n            if (!value) {\n                return '';\n            }\n            let item;\n            if (value instanceof ListItem) {\n                item = this.list.find(i => i.value === value.value);\n            }\n            else {\n                item = this.list.find(i => i.value === value.toString());\n            }\n            return item !== undefined ? item.name : '';\n        };\n    }\n    ngOnChanges(changes) {\n        const myControlChanges = changes['myControl'];\n        const listChanges = changes['list'];\n        if (this.list.length < 1 && !this.required) {\n            this.list.push({ value: '', name: '' });\n        }\n        if ((myControlChanges || listChanges) && this.myControl && this.list) {\n            this.init(this.list);\n        }\n        if (changes['required'] || changes['customError']) {\n            if (this.myControl) {\n                this.checkRequiredError(this.myControl.value);\n            }\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n    init(list) {\n        this.filteredValues = merge(this.clickEvent.asObservable(), this.typeEvent.asObservable().pipe(debounceTime(100))).pipe(startWith(''), tap(value => this.checkRequiredError(value)), map(value => this.filter(value)));\n        this.isReady = true;\n    }\n    emitEventIfValid(value, list) {\n        if (list) {\n            const item = list.find(it => it.name === value);\n            if (item && this.myControl) {\n                this.myControl.setValue(item.value);\n                this.event.emit(item);\n            }\n        }\n    }\n    checkRequiredError(value) {\n        if (this.myControl && !this.myControl.value && value === '' && this.required) {\n            this.myControl.setErrors({ required: true });\n        }\n        else {\n            if (this.myControl && this.myControl.errors) {\n                delete this.myControl.errors['required'];\n            }\n            if (this.myControl && this.myControl.errors !== null && Object.keys(this.myControl.errors).length === 0) {\n                this.myControl.setErrors(null);\n            }\n        }\n    }\n    checkInvalidError(value, list) {\n        if (value) {\n            if (this.myControl && this.myControl.value && list) {\n                const listItem = list.find(it => {\n                    if (this.myControl) {\n                        return it.value === this.myControl.value;\n                    }\n                    return null;\n                });\n                if (listItem) {\n                    value = listItem.name;\n                }\n            }\n        }\n        const filteredValues = list.filter(v => v.name.toLowerCase() === value.toLowerCase());\n        let item;\n        if (filteredValues) {\n            item = filteredValues.find(it => it.name === value);\n        }\n        if (value\n            && ((!item && filteredValues)\n                || (item))) {\n            if (this.myControl && this.myControl.errors) {\n                delete this.myControl.errors['invalid'];\n            }\n        }\n        else if (value && this.myControl) {\n            this.myControl.setErrors({ invalid: true });\n        }\n    }\n    filter(value) {\n        const listItems = (value !== '') ? this.list.filter(option => option.name.toLowerCase().includes(value.toLowerCase())) : this.list;\n        this.emitEventIfValid(value, listItems);\n        this.checkInvalidError(value, listItems);\n        return listItems;\n    }\n    onInput(event) {\n        // @ts-ignore\n        this.typeEvent.emit(event.target['value']);\n    }\n    onItemClick(obj) {\n        this.clickEvent.emit(obj.option.value);\n    }\n}\nComboBoxSelectComponent.ɵfac = function ComboBoxSelectComponent_Factory(t) { return new (t || ComboBoxSelectComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\nComboBoxSelectComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ComboBoxSelectComponent, selectors: [[\"app-combobox-select\"]], inputs: { list: \"list\", title: \"title\", required: \"required\", myControl: \"myControl\", readonly: \"readonly\" }, outputs: { event: \"event\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 13, vars: 9, consts: [[\"appearance\", \"outline\", 1, \"mat-form-field-fluid\"], [\"type\", \"text\", \"maxlength\", \"255\", \"matInput\", \"\", 3, \"readonly\", \"formControl\", \"matAutocomplete\", \"input\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\"], [4, \"ngIf\"], [\"autoActiveFirstOption\", \"\", 3, \"displayWith\", \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function ComboBoxSelectComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(1, \"mat-label\");\n        i0.ɵɵelementStart(2, \"strong\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 1);\n        i0.ɵɵlistener(\"input\", function ComboBoxSelectComponent_Template_input_input_4_listener($event) { return ctx.onInput($event); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 2);\n        i0.ɵɵelementStart(6, \"mat-icon\");\n        i0.ɵɵtext(7, \"keyboard_arrow_down\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, ComboBoxSelectComponent_mat_error_8_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementStart(9, \"mat-autocomplete\", 4, 5);\n        i0.ɵɵlistener(\"optionSelected\", function ComboBoxSelectComponent_Template_mat_autocomplete_optionSelected_9_listener($event) { return ctx.onItemClick($event); });\n        i0.ɵɵtemplate(11, ComboBoxSelectComponent_mat_option_11_Template, 2, 2, \"mat-option\", 6);\n        i0.ɵɵpipe(12, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r1 = i0.ɵɵreference(10);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"readonly\", ctx.readonly)(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.myControl.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFunction);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 7, ctx.filteredValues));\n    } }, directives: [i1.MatFormField, i1.MatLabel, i2.MatInput, i3.DefaultValueAccessor, i4.MatAutocompleteTrigger, i3.MaxLengthValidator, i3.NgControlStatus, i3.FormControlDirective, i5.MatButton, i1.MatSuffix, i6.MatIcon, i7.NgIf, i4.MatAutocomplete, i7.NgForOf, i1.MatError, i8.MatOption], pipes: [i7.AsyncPipe], styles: [\"mat-form-field[_ngcontent-%COMP%] {\\n  width: 99%;\\n}\\n\\nmat-icon[_ngcontent-%COMP%] {\\n  margin-right: 0 !important;\\n  vertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbWJvLWJveC1zZWxlY3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSwwQkFBQTtFQUNBLHNCQUFBO0FBQ0YiLCJmaWxlIjoiY29tYm8tYm94LXNlbGVjdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDk5JTtcbn1cblxubWF0LWljb24ge1xuICBtYXJnaW4tcmlnaHQ6IDAgIWltcG9ydGFudDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbiJdfQ== */\"] });\n"]},"metadata":{},"sourceType":"module"}