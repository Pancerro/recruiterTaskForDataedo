{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { debounceTime, map, startWith, tap } from \"rxjs/operators\";\nimport { merge } from 'rxjs';\nimport { ListItem } from \"../../model/list-item\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/core\";\n\nfunction ComboBoxComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ComboBoxComponent_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const obj_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", obj_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", obj_r3.name, \" \");\n  }\n}\n\nexport class ComboBoxComponent {\n  constructor(changeDetectorRef) {\n    this.changeDetectorRef = changeDetectorRef;\n    this.isReady = false;\n    this.list = [];\n    this.title = '';\n    this.required = false;\n    this.customErrorMessage = '';\n    this.readonly = false;\n    this.event = new EventEmitter();\n    this.clickEvent = new EventEmitter();\n    this.typeEvent = new EventEmitter();\n\n    this.displayFunction = value => {\n      if (!value) {\n        return '';\n      }\n\n      let item;\n\n      if (value instanceof ListItem) {\n        item = this.list.find(i => i.value === value.value);\n      } else {\n        item = this.list.find(i => i.value === value.toString());\n      }\n\n      return item !== undefined ? item.name : '';\n    };\n  }\n\n  ngOnChanges(changes) {\n    const myControlChanges = changes['myControl'];\n    const listChanges = changes['list'];\n\n    if (this.list.length < 1 && !this.required) {\n      this.list.push({\n        value: '',\n        name: ''\n      });\n    }\n\n    if ((myControlChanges || listChanges) && this.myControl && this.list) {\n      this.init(this.list);\n    }\n\n    if (changes['required'] || changes['customError']) {\n      if (this.myControl) {\n        this.checkRequiredError(this.myControl.value);\n      }\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  init(list) {\n    this.filteredValues = merge(this.clickEvent.asObservable(), this.typeEvent.asObservable().pipe(debounceTime(100))).pipe(startWith(''), tap(value => this.checkRequiredError(value)), map(value => this.filter(value)));\n    this.isReady = true;\n  }\n\n  emitEventIfValid(value, list) {\n    if (list) {\n      const item = list.find(it => it.name === value);\n\n      if (item && this.myControl) {\n        this.myControl.setValue(item.value);\n        this.event.emit(item);\n      }\n    }\n  }\n\n  checkRequiredError(value) {\n    if (this.myControl && this.customErrorMessage) {\n      this.myControl.setErrors({\n        customError: true\n      });\n    } else if (this.myControl && !this.myControl.value && value === '' && this.required) {\n      this.myControl.setErrors({\n        required: true\n      });\n    } else {\n      if (this.myControl && this.myControl.errors) {\n        delete this.myControl.errors['required'];\n      }\n\n      if (this.myControl && this.myControl.errors !== null && Object.keys(this.myControl.errors).length === 0) {\n        this.myControl.setErrors(null);\n      }\n    }\n  }\n\n  checkInvalidError(value, list) {\n    if (value) {\n      if (this.myControl && this.myControl.value && list) {\n        const listItem = list.find(it => {\n          if (this.myControl) {\n            return it.value === this.myControl.value;\n          }\n\n          return null;\n        });\n\n        if (listItem) {\n          value = listItem.name;\n        }\n      }\n    }\n\n    const filteredValues = list.filter(v => v.name.toLowerCase() === value.toLowerCase());\n    let item;\n\n    if (filteredValues) {\n      item = filteredValues.find(it => it.name === value);\n    }\n\n    if (value && (!item && filteredValues || item)) {\n      if (this.myControl && this.myControl.errors) {\n        delete this.myControl.errors['invalid'];\n      }\n    } else if (value && this.myControl) {\n      this.myControl.setErrors({\n        invalid: true\n      });\n    }\n  }\n\n  filter(value) {\n    const listItems = value !== '' ? this.list.filter(option => option.name.toLowerCase().includes(value.toLowerCase())) : this.list;\n    this.emitEventIfValid(value, listItems);\n    this.checkInvalidError(value, listItems);\n    return listItems;\n  }\n\n  onInput(event) {\n    // @ts-ignore\n    this.typeEvent.emit(event.target['value']);\n  }\n\n  onItemClick(obj) {\n    this.clickEvent.emit(obj.option.value);\n  }\n\n}\n\nComboBoxComponent.ɵfac = function ComboBoxComponent_Factory(t) {\n  return new (t || ComboBoxComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nComboBoxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ComboBoxComponent,\n  selectors: [[\"app-combobox\"]],\n  inputs: {\n    list: \"list\",\n    title: \"title\",\n    required: \"required\",\n    myControl: \"myControl\",\n    customErrorMessage: \"customErrorMessage\",\n    readonly: \"readonly\"\n  },\n  outputs: {\n    event: \"event\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 9,\n  consts: [[\"appearance\", \"outline\", 1, \"mat-form-field-fluid\"], [\"type\", \"text\", \"maxlength\", \"255\", \"matInput\", \"\", 3, \"readonly\", \"formControl\", \"matAutocomplete\", \"input\"], [4, \"ngIf\"], [\"autoActiveFirstOption\", \"\", 3, \"displayWith\", \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function ComboBoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n      i0.ɵɵelementStart(1, \"mat-label\");\n      i0.ɵɵelementStart(2, \"strong\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 1);\n      i0.ɵɵlistener(\"input\", function ComboBoxComponent_Template_input_input_4_listener($event) {\n        return ctx.onInput($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-icon\");\n      i0.ɵɵtext(6, \"keyboard_arrow_down\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, ComboBoxComponent_mat_error_7_Template, 2, 0, \"mat-error\", 2);\n      i0.ɵɵelementStart(8, \"mat-autocomplete\", 3, 4);\n      i0.ɵɵlistener(\"optionSelected\", function ComboBoxComponent_Template_mat_autocomplete_optionSelected_8_listener($event) {\n        return ctx.onItemClick($event);\n      });\n      i0.ɵɵtemplate(10, ComboBoxComponent_mat_option_10_Template, 2, 2, \"mat-option\", 5);\n      i0.ɵɵpipe(11, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(9);\n\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"readonly\", ctx.readonly)(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r1);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.myControl.hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"displayWith\", ctx.displayFunction);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 7, ctx.filteredValues));\n    }\n  },\n  directives: [i1.MatFormField, i1.MatLabel, i2.MatInput, i3.DefaultValueAccessor, i4.MatAutocompleteTrigger, i3.MaxLengthValidator, i3.NgControlStatus, i3.FormControlDirective, i5.MatIcon, i6.NgIf, i4.MatAutocomplete, i6.NgForOf, i1.MatError, i7.MatOption],\n  pipes: [i6.AsyncPipe],\n  styles: [\"mat-form-field[_ngcontent-%COMP%] {\\n  width: 99%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbWJvLWJveC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7QUFDRiIsImZpbGUiOiJjb21iby1ib3guY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiA5OSU7XG59XG4iXX0= */\"]\n});","map":{"version":3,"sources":["/home/adrian/Pulpit/frontendTask/frontendTask/src/app/shared/components/combox/combo-box.component.ts"],"names":["EventEmitter","debounceTime","map","startWith","tap","merge","ListItem","i0","i1","i2","i3","i4","i5","i6","i7","ComboBoxComponent_mat_error_7_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ComboBoxComponent_mat_option_10_Template","obj_r3","$implicit","ɵɵproperty","name","ɵɵadvance","ɵɵtextInterpolate1","ComboBoxComponent","constructor","changeDetectorRef","isReady","list","title","required","customErrorMessage","readonly","event","clickEvent","typeEvent","displayFunction","value","item","find","i","toString","undefined","ngOnChanges","changes","myControlChanges","listChanges","length","push","myControl","init","checkRequiredError","detectChanges","filteredValues","asObservable","pipe","filter","emitEventIfValid","it","setValue","emit","setErrors","customError","errors","Object","keys","checkInvalidError","listItem","v","toLowerCase","invalid","listItems","option","includes","onInput","target","onItemClick","obj","ɵfac","ComboBoxComponent_Factory","t","ɵɵdirectiveInject","ChangeDetectorRef","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","ComboBoxComponent_Template","ɵɵlistener","ComboBoxComponent_Template_input_input_4_listener","$event","ɵɵtemplate","ComboBoxComponent_Template_mat_autocomplete_optionSelected_8_listener","ɵɵpipe","_r1","ɵɵreference","ɵɵtextInterpolate","hasError","ɵɵpipeBind1","directives","MatFormField","MatLabel","MatInput","DefaultValueAccessor","MatAutocompleteTrigger","MaxLengthValidator","NgControlStatus","FormControlDirective","MatIcon","NgIf","MatAutocomplete","NgForOf","MatError","MatOption","pipes","AsyncPipe","styles"],"mappings":"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","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { debounceTime, map, startWith, tap } from \"rxjs/operators\";\nimport { merge } from 'rxjs';\nimport { ListItem } from \"../../model/list-item\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/core\";\nfunction ComboBoxComponent_mat_error_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Field is required\");\n    i0.ɵɵelementEnd();\n} }\nfunction ComboBoxComponent_mat_option_10_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const obj_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", obj_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", obj_r3.name, \" \");\n} }\nexport class ComboBoxComponent {\n    constructor(changeDetectorRef) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.isReady = false;\n        this.list = [];\n        this.title = '';\n        this.required = false;\n        this.customErrorMessage = '';\n        this.readonly = false;\n        this.event = new EventEmitter();\n        this.clickEvent = new EventEmitter();\n        this.typeEvent = new EventEmitter();\n        this.displayFunction = (value) => {\n            if (!value) {\n                return '';\n            }\n            let item;\n            if (value instanceof ListItem) {\n                item = this.list.find(i => i.value === value.value);\n            }\n            else {\n                item = this.list.find(i => i.value === value.toString());\n            }\n            return item !== undefined ? item.name : '';\n        };\n    }\n    ngOnChanges(changes) {\n        const myControlChanges = changes['myControl'];\n        const listChanges = changes['list'];\n        if (this.list.length < 1 && !this.required) {\n            this.list.push({ value: '', name: '' });\n        }\n        if ((myControlChanges || listChanges) && this.myControl && this.list) {\n            this.init(this.list);\n        }\n        if (changes['required'] || changes['customError']) {\n            if (this.myControl) {\n                this.checkRequiredError(this.myControl.value);\n            }\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n    init(list) {\n        this.filteredValues = merge(this.clickEvent.asObservable(), this.typeEvent.asObservable().pipe(debounceTime(100))).pipe(startWith(''), tap(value => this.checkRequiredError(value)), map(value => this.filter(value)));\n        this.isReady = true;\n    }\n    emitEventIfValid(value, list) {\n        if (list) {\n            const item = list.find(it => it.name === value);\n            if (item && this.myControl) {\n                this.myControl.setValue(item.value);\n                this.event.emit(item);\n            }\n        }\n    }\n    checkRequiredError(value) {\n        if (this.myControl && this.customErrorMessage) {\n            this.myControl.setErrors({ customError: true });\n        }\n        else if (this.myControl && !this.myControl.value && value === '' && this.required) {\n            this.myControl.setErrors({ required: true });\n        }\n        else {\n            if (this.myControl && this.myControl.errors) {\n                delete this.myControl.errors['required'];\n            }\n            if (this.myControl && this.myControl.errors !== null && Object.keys(this.myControl.errors).length === 0) {\n                this.myControl.setErrors(null);\n            }\n        }\n    }\n    checkInvalidError(value, list) {\n        if (value) {\n            if (this.myControl && this.myControl.value && list) {\n                const listItem = list.find(it => {\n                    if (this.myControl) {\n                        return it.value === this.myControl.value;\n                    }\n                    return null;\n                });\n                if (listItem) {\n                    value = listItem.name;\n                }\n            }\n        }\n        const filteredValues = list.filter(v => v.name.toLowerCase() === value.toLowerCase());\n        let item;\n        if (filteredValues) {\n            item = filteredValues.find(it => it.name === value);\n        }\n        if (value\n            && ((!item && filteredValues)\n                || (item))) {\n            if (this.myControl && this.myControl.errors) {\n                delete this.myControl.errors['invalid'];\n            }\n        }\n        else if (value && this.myControl) {\n            this.myControl.setErrors({ invalid: true });\n        }\n    }\n    filter(value) {\n        const listItems = (value !== '') ? this.list.filter(option => option.name.toLowerCase().includes(value.toLowerCase())) : this.list;\n        this.emitEventIfValid(value, listItems);\n        this.checkInvalidError(value, listItems);\n        return listItems;\n    }\n    onInput(event) {\n        // @ts-ignore\n        this.typeEvent.emit(event.target['value']);\n    }\n    onItemClick(obj) {\n        this.clickEvent.emit(obj.option.value);\n    }\n}\nComboBoxComponent.ɵfac = function ComboBoxComponent_Factory(t) { return new (t || ComboBoxComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\nComboBoxComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ComboBoxComponent, selectors: [[\"app-combobox\"]], inputs: { list: \"list\", title: \"title\", required: \"required\", myControl: \"myControl\", customErrorMessage: \"customErrorMessage\", readonly: \"readonly\" }, outputs: { event: \"event\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 12, vars: 9, consts: [[\"appearance\", \"outline\", 1, \"mat-form-field-fluid\"], [\"type\", \"text\", \"maxlength\", \"255\", \"matInput\", \"\", 3, \"readonly\", \"formControl\", \"matAutocomplete\", \"input\"], [4, \"ngIf\"], [\"autoActiveFirstOption\", \"\", 3, \"displayWith\", \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function ComboBoxComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(1, \"mat-label\");\n        i0.ɵɵelementStart(2, \"strong\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 1);\n        i0.ɵɵlistener(\"input\", function ComboBoxComponent_Template_input_input_4_listener($event) { return ctx.onInput($event); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-icon\");\n        i0.ɵɵtext(6, \"keyboard_arrow_down\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, ComboBoxComponent_mat_error_7_Template, 2, 0, \"mat-error\", 2);\n        i0.ɵɵelementStart(8, \"mat-autocomplete\", 3, 4);\n        i0.ɵɵlistener(\"optionSelected\", function ComboBoxComponent_Template_mat_autocomplete_optionSelected_8_listener($event) { return ctx.onItemClick($event); });\n        i0.ɵɵtemplate(10, ComboBoxComponent_mat_option_10_Template, 2, 2, \"mat-option\", 5);\n        i0.ɵɵpipe(11, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r1 = i0.ɵɵreference(9);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"readonly\", ctx.readonly)(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.myControl.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFunction);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 7, ctx.filteredValues));\n    } }, directives: [i1.MatFormField, i1.MatLabel, i2.MatInput, i3.DefaultValueAccessor, i4.MatAutocompleteTrigger, i3.MaxLengthValidator, i3.NgControlStatus, i3.FormControlDirective, i5.MatIcon, i6.NgIf, i4.MatAutocomplete, i6.NgForOf, i1.MatError, i7.MatOption], pipes: [i6.AsyncPipe], styles: [\"mat-form-field[_ngcontent-%COMP%] {\\n  width: 99%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbWJvLWJveC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7QUFDRiIsImZpbGUiOiJjb21iby1ib3guY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiA5OSU7XG59XG4iXX0= */\"] });\n"]},"metadata":{},"sourceType":"module"}